
#user  nobody;
worker_processes  3;

#error_log  logs/error.log;
#error_log  logs/error.log  notice
error_log  logs/error.log  warn;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    #dict data for policy
    lua_shared_dict policy 100m;
    lua_package_path '/home/work/gateway/?.lua;;';
    include       mime.types;
    default_type  application/octet-stream;
    
    init_worker_by_lua_file /home/work/gateway/ngx_init.lua;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" FLSTATUS:$send_http_FLSTATUS';

    access_log  logs/access.log  main;

    log_format  fuse '$remote_addr $request $status ';
    log_format  limit '$remote_addr $request $status ';
    access_log  logs/fuse.log fuse if=$sent_http_fuse ;
    access_log  logs/limit.log limit if=$sent_http_limit ;
    
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server{
	server_name gateway_2;
	##lua_code_cache off;
	listen 90;
    location /{
        rewrite_by_lua_file /home/work/gateway/ngx_rewrite.lua;
        echo normal_return;
    }

    location = /flstatus{
    	lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_status.lua;
    }

    location = /fuse_set_exact{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_set_fuse_exact.lua;
    }

    location = /fuse_delete_exact{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_del_fuse_exact.lua;
    }

    location = /fuse_set_domain{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_set_fuse_domain.lua;
    }

    location = /fuse_delete_domain{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_del_fuse_domain.lua;
    }

    location = /limit_set{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_set_limit.lua;
    }

	location = /limit_delete{
        lua_need_request_body on;
        content_by_lua_file /home/work/gateway/ngx_del_limit.lua;
    }

	location =/data{
		root /usr/local/openresty/nginx/html;
	}
	
	location =/list{
		content_by_lua_file /home/work/lua/script/nginx_l.lua;
	}
	}

}
